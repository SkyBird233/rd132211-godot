[gd_resource type="VisualShader" load_steps=8 format=3 uid="uid://de3ggubn4m0jo"]

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_6gnhf"]
default_input_values = [1, Vector2(3, 2), 2, Vector2(0, 0)]
function = 1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_bhb42"]
parameter_name = "Texture2DParameter"
texture_filter = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_hat4m"]
source = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_tk3pw"]
input_name = "node_position_world"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_rof5h"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.1, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_6aq0p"]
constant = Color(0, 0, 1, 1)

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_hb7u5"]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D Texture2DParameter : filter_nearest;



void fragment() {
// Input:2
	vec3 n_out2p0 = NODE_POSITION_WORLD;


// VectorDecompose:8
	float n_out8p0 = n_out2p0.x;
	float n_out8p1 = n_out2p0.y;
	float n_out8p2 = n_out2p0.z;


// UVFunc:10
	vec2 n_in10p1 = vec2(3.00000, 2.00000);
	vec2 n_in10p2 = vec2(0.00000, 0.00000);
	vec2 n_out10p0 = (UV - n_in10p2) * n_in10p1 + n_in10p2;


	vec4 n_out13p0;
// Texture2D:13
	n_out13p0 = texture(Texture2DParameter, n_out10p0);


// ColorConstant:7
	vec4 n_out7p0 = vec4(0.000000, 0.000000, 1.000000, 1.000000);


	vec3 n_out3p0;
// If:3
	float n_in3p1 = 0.00000;
	float n_in3p2 = 0.10000;
	vec3 n_in3p4 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out8p1 - n_in3p1) < n_in3p2)
	{
		n_out3p0 = vec3(n_out13p0.xyz);
	}
	else if(n_out8p1 < n_in3p1)
	{
		n_out3p0 = vec3(n_out7p0.xyz);
	}
	else
	{
		n_out3p0 = n_in3p4;
	}


// Output:0
	ALBEDO = n_out3p0;


}
"
nodes/fragment/0/position = Vector2(1220, 1260)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_tk3pw")
nodes/fragment/2/position = Vector2(200, 1220)
nodes/fragment/3/node = SubResource("VisualShaderNodeIf_rof5h")
nodes/fragment/3/position = Vector2(960, 1260)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorConstant_6aq0p")
nodes/fragment/7/position = Vector2(640, 1720)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorDecompose_hb7u5")
nodes/fragment/8/position = Vector2(600, 1220)
nodes/fragment/10/node = SubResource("VisualShaderNodeUVFunc_6gnhf")
nodes/fragment/10/position = Vector2(280, 1360)
nodes/fragment/12/node = SubResource("VisualShaderNodeTexture2DParameter_bhb42")
nodes/fragment/12/position = Vector2(180, 1580)
nodes/fragment/13/node = SubResource("VisualShaderNodeTexture_hat4m")
nodes/fragment/13/position = Vector2(620, 1440)
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 0, 2, 0, 8, 0, 8, 1, 3, 0, 10, 0, 13, 0, 12, 0, 13, 2, 13, 0, 3, 3, 7, 0, 3, 5)
